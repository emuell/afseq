[package]
name = "afseq"
version = "0.3.1"
edition = "2021"
description = "Experimental, dynamic, imperative and functional music sequence generator for Rust and Lua"
authors = ["Eduard MÃ¼ller <mail@emuell.net>"]
exclude = ["assets", "examples"]
categories = ["audio", "midi", "sequencer"]

[dependencies]
lazy_static = { version = "^1.4" }
anyhow = { version = "^1.0" }
paste = { version = "^1.0" }
derive_more = { version = "^1.0", features = ["from", "into", "display"] }
log = { version = "^0.4" }
simplelog = { version = "^0.12" }
rand = { version = "^0.8" }
rand_xoshiro = { version = "^0.6" }
fraction = { version = "^0.15" }
pest = { version = "^2.7" }
pest_derive = { version = "^2.7" }

# optional -> dhat-profiler
dhat = { version = "^0.3", optional = true }

# optional -> player
crossbeam-channel = { version = "^0.5", optional = true }
afplay = { git = "https://github.com/emuell/afplay", default-features = false, features = [
    "cpal-output",
], optional = true }

# optional -> scripting
mlua = { version = "^0.9", default-features = false, features = [
    "vendored",
    "unstable",
], optional = true }

[dev-dependencies]
notify = { version = "^6.1" }
ctrlc = { version = "^3.4" }
criterion = { version = "^0.5" }

[profile.dev]
debug = "full"

[profile.bench]
debug = "full"

[profile.release]
debug = "full"

[features]
# enables profiling in examples
dhat-profiler = ["dhat"]

# example player implementation
player = ["crossbeam-channel", "afplay"]

# lua scripting
scripting = ["mlua"]

# lua scripting interpreter backends (mutually exclusive)
# all featured interpreters should be compatible with lua51
lua = ["mlua/lua51"]
lua-jit = ["mlua/luajit"]
luau = ["mlua/luau"]
luau-jit = ["mlua/luau-jit"]

# default features enable scripting with a luaJIT interpreter 
default = ["scripting", "lua-jit"]

[lib]
bench = false

[[bench]]
name = "benches"
harness = false

[[example]]
name = "play"
required-features = ["player"]

[[example]]
name = "play-script"
required-features = ["scripting", "player"]
